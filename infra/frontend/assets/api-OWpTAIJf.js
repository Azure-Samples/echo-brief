import{c as l}from"./button-DKvy1mVZ.js";import{C as c,S as i,f as u,U as g,L as h,R as d}from"./apiConstants-5F4MNVxx.js";/**
 * @license lucide-react v0.476.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const w=[["path",{d:"M21 12a9 9 0 1 1-6.219-8.56",key:"13zald"}]],y=l("LoaderCircle",w);async function T(e,t){const o=await fetch(d,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return await o.json()}async function k(e,t){const o=await fetch(h,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})}),r=await o.json();return o.ok?r:{status:o.status,message:r.message||"An error occurred during login",access_token:"",token_type:""}}async function m(e,t,o,r){const n=new FormData;n.append("file",e),n.append("prompt_category_id",t),n.append("prompt_subcategory_id",o);const a=await fetch(g,{method:"POST",headers:{Authorization:`Bearer ${r}`},body:n}),s=await a.json();if(!a.ok)throw new Error(s.message||`HTTP error! status: ${a.status}`);return s}async function E(){const e=localStorage.getItem("token");if(!e)throw new Error("No authentication token found. Please log in again.");const t=await fetch(u,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}async function P(e){const t=localStorage.getItem("token");if(!t)throw new Error("No authentication token found. Please log in again.");const o=await fetch(c,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({name:e})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return await o.json()}async function S(){const e=localStorage.getItem("token");if(!e)throw new Error("No authentication token found. Please log in again.");const t=await fetch(c,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}async function b(e,t){if(!e)throw console.error("Category ID is undefined or empty"),new Error("Invalid category ID. Cannot update category.");const o=localStorage.getItem("token");if(!o)throw new Error("No authentication token found. Please log in again.");console.log("Updating category with ID:",e),console.log("New name:",t),console.log("Using token:",o.substring(0,15)+"...");try{const r=await fetch(`${c}/${e}`,{method:"PUT",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({name:t})});if(console.log("Update category response status:",r.status),!r.ok){if(r.status===401)throw console.error("Authentication failed (401). Token may be invalid or expired."),localStorage.removeItem("token"),new Error("Authentication failed. Please log in again.");const n=await r.text();throw console.error("Error response body:",n),new Error(`HTTP error! status: ${r.status}, message: ${n}`)}return await r.json()}catch(r){throw console.error("Error updating category:",r),r}}async function $(e){const t=localStorage.getItem("token");if(!t)throw new Error("No authentication token found. Please log in again.");const o=await fetch(`${c}/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`}});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`)}async function I(e,t,o){const r=localStorage.getItem("token");if(!r)throw new Error("No authentication token found. Please log in again.");const n=await fetch(i,{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({name:e,category_id:t,prompts:o})});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);return await n.json()}async function A(e){const t=localStorage.getItem("token");if(!t)throw new Error("No authentication token found. Please log in again.");const o=e?`${i}?category_id=${e}`:i,r=await fetch(o,{method:"GET",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}async function C(e,t,o){const r=localStorage.getItem("token");if(!r)throw new Error("No authentication token found. Please log in again.");if(!e)throw console.error("Subcategory ID is undefined or empty"),new Error("Invalid subcategory ID. Cannot update subcategory.");console.log("Updating subcategory with ID:",e),console.log("New name:",t),console.log("New prompts:",o),console.log("Using token:",r.substring(0,15)+"...");try{const n=await fetch(`${i}/${e}`,{method:"PUT",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({name:t,prompts:o})});if(console.log("Update subcategory response status:",n.status),!n.ok){if(n.status===401)throw console.error("Authentication failed (401). Token may be invalid or expired."),localStorage.removeItem("token"),new Error("Authentication failed. Please log in again.");if(n.status===404)throw console.error("Subcategory not found (404)."),new Error("Subcategory not found. It may have been already deleted.");const s=await n.text();throw console.error("Error response body:",s),new Error(`HTTP error! status: ${n.status}, message: ${s}`)}const a=await n.json();return console.log("Update subcategory response:",a),a}catch(n){throw console.error("Error updating subcategory:",n),n}}async function j(e){const t=localStorage.getItem("token");if(!t)throw new Error("No authentication token found. Please log in again.");if(!e||typeof e!="string")throw console.error("Invalid subcategory ID:",e),new Error("Invalid subcategory ID. Cannot delete subcategory.");console.log("Deleting subcategory with ID:",e),console.log("Using token:",t.substring(0,15)+"...");try{const o=await fetch(`${i}/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}});if(console.log("Delete subcategory response status:",o.status),!o.ok){if(o.status===401)throw console.error("Authentication failed (401). Token may be invalid or expired."),localStorage.removeItem("token"),new Error("Authentication failed. Please log in again.");if(o.status===404)throw console.error("Subcategory not found (404)."),new Error("Subcategory not found. It may have been already deleted.");const r=await o.text();throw console.error("Error response body:",r),new Error(`HTTP error! status: ${o.status}, message: ${r}`)}}catch(o){throw console.error("Error deleting subcategory:",o),o}}export{y as L,A as a,I as b,P as c,C as d,$ as e,S as f,j as g,E as h,m as i,k as l,T as r,b as u};
